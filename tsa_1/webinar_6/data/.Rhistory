print(p)
print(x)
fc <- data_stretch |>
model(
model <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
fc <- data_stretch |>
model(
model <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
return(fc)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
fc <- data_stretch |>
model(
model <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
data_stretch
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
return data_stretch
apply(arima_grid, 1, f)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
return(data_stretch)
fc <- data_stretch |>
model(
model <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=1, d = 1, q = 1)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
f <- function(x) {
p = x[1]
d = x[2]
q = x[3]
param_id = x[4]
return(x)
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=1, d = 1, q = 1)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
apply(arima_grid, 1, f)
a = apply(arima_grid, 1, f)
a[0]
a[1]
f <- function(x) {
p = x$p
d = x$d
q = x$q
param_id = x$param_id
return(p)
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=1, d = 1, q = 1)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
a = apply(arima_grid, 1, f)
print(x)
f <- function(x) {
print(x)
p = x$p
d = x$d
q = x$q
param_id = x$param_id
return(p)
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=1, d = 1, q = 1)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
a = apply(arima_grid, 1, f)
f <- function(x) {
print(x[['p']])
p = x$p
d = x$d
q = x$q
param_id = x$param_id
return(p)
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=1, d = 1, q = 1)),
# naive = MEAN(target)
)
# |>
#   forecast(h = 8) |>
#   group_by(.id, .model) |>
#   mutate(h = row_number()) |>
#   ungroup() |>
#   mutate(param_id = param_id) |>
#   as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
a = apply(arima_grid, 1, f)
f <- function(x) {
print()
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
return(fc)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
a = apply(arima_grid, 1, f)
f <- function(x) {
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
return(metrics)
# results = rbind(results, metrics)
# assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
a = apply(arima_grid, 1, f)
a
rbind(a)
a
rbind(c(a))
a = sapply(arima_grid, 1, f)
a = lapply(arima_grid, 1, f)
rbind(unlist(a))
rbind(unlist(a, recursive = FALSE))
a = apply(arima_grid, 1, f)
rbind(unlist(a, recursive = FALSE))
f <- function(x) {
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
results
results = data.frame()
f <- function(x) {
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
assign("results", rbind(results, metrics), envir = .GlobalEnv)
# # results = results
#
}
rbind(unlist(a, recursive = FALSE))
a = apply(arima_grid, 1, f)
results
arima_grid
results
results |>
group_by(param_id) |>
ggplot(aes(x = h, y = MAPE))+
facet_wrap(~param_id, nrow = 1)  +
geom_point() +
theme_bw()
results |>
group_by(param_id) |>
ggplot(aes(x = h, y = MAPE, colour=param_id))+
facet_wrap(~param_id, nrow = 1)  +
geom_line() +
theme_bw()
results |>
group_by(param_id) |>
ggplot(aes(x = h, y = MAPE, colour=param_id))+
# facet_wrap(~param_id, nrow = 1)  +
geom_line() +
theme_bw()
results |>
group_by(param_id) |>
ggplot()+
# facet_wrap(~param_id, nrow = 1)  +
geom_line(aes(x = h, y = MAPE, colour=param_id)) +
theme_bw()
results |>
group_by(param_id) |>
ggplot()+
# facet_wrap(~param_id, nrow = 1)  +
geom_line(aes(x = h, y = MAPE, group=param_id, colour=param_id)) +
theme_bw()
arima_grid <-  expand.grid(p = seq(1, 5),
d = 1,
q = seq(1, 5)
)
arima_grid
arima_grid = arima_grid %>% mutate(param_id = row_number())
arima_grid
results = data.frame()
data_stretch
f <- function(x) {
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
print(metrics)
metrics = mutate(metrics, param_id = param_id)
assign("results", rbind(results, metrics), envir = .GlobalEnv)
}
apply(arima_grid, f, 1, F)
apply(arima_grid,1,f,F)
apply(arima_grid,1,f)
f <- function(x) {
p = x[['p']]
d = x[['d']]
q = x[['q']]
param_id = x[['param_id']]
fc <- data_stretch |>
model(
auto <-  ARIMA(target ~ pdq(p=p, d = d, q = q)),
) |>
forecast(h = 8) |>
group_by(.id, .model) |>
mutate(h = row_number()) |>
ungroup() |>
mutate(param_id = param_id) |>
as_fable(response = "target", distribution = target)
metrics = fc |>
accuracy(data, by = c("h", ".model"))
metrics = mutate(metrics, param_id = param_id)
assign("results", rbind(results, metrics), envir = .GlobalEnv)
}
apply(arima_grid,1,f)
results |>
group_by(param_id) |>
ggplot()+
# facet_wrap(~param_id, nrow = 1)  +
geom_line(aes(x = h, y = MAPE, group=param_id, colour=param_id)) +
theme_bw()
