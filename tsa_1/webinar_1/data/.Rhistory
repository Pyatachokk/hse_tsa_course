glimpse(marr_features)
ggplot(marr_features, aes(x = trend_strength,
y = seasonal_strength_year,
label = name)) +
geom_point() + geom_text_repel()
library(ggrepel) # симпатичные подписи
ggplot(marr_features, aes(x = trend_strength,
y = seasonal_strength_year,
label = name)) +
geom_point() + geom_text_repel()
macro = read_csv("macrodata.csv")
colnames(macro)[1] = "date"
# trends
ggplot(macro, aes(date, infl)) + geom_line()
# cycles
ggplot(macro, aes(date, unemp)) + geom_line()
# seasonality
ggplot(macro, aes(date, c(NA, diff(pop)))) + geom_line()
library(fpp3) # куча плюшек для рядов
library(tidyverse) # обработка данных
library(fpp3) # куча плюшек для рядов
library(tidyverse) # обработка данных
macro = read_csv("macrodata.csv")
library(fpp3) # куча плюшек для рядов
library(tidyverse) # обработка данных
macro = read_csv("macrodata.csv")
colnames(macro)[1] = "date"
# trends
ggplot(macro, aes(date, infl)) + geom_line()
gg_subseries(macro, infl)
gg_subseries(macro, aes(date, infl))
tibble(macro)
macro = tibble(macro)
gg_subseries(macro, infl)
macro = tibble(macro, index=date)
gg_subseries(macro, infl)
autoplot(macro, infl)
autoplot(macro, infl)
macro = tsibble(macro, index=date)
autoplot(macro, infl)
# trends
ggplot(macro, aes(date, infl)) + geom_line()
gg_subseries(macro, infl)
head(macro)
date=yearquarter(macro$date)
date
macro = read_csv("macrodata.csv")
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
autoplot(macro, infl)
# trends
gg_season(two, rwalk)
gg_subseries(macro, infl)
# trends
gg_season(macro, infl)
gg_subseries(macro, infl)
# cycles
autoplot(macro, unemp)
gg_season(macro, unemp)
gg_subseries(macro, unemp)
# seasonality
# cycles
autoplot(macro, pop)
gg_season(macro, pop)
gg_subseries(macro, pop)
autoplot(macro, diff(pop))
autoplot(macro, c(NA, diff(pop)))
gg_season(macro, c(NA, diff(pop)))
gg_subseries(macro, c(NA, diff(pop)))
gg_season(macro, c(NA, diff(pop)))
m = import('marriages.csv')
glimpse(m)
m = import('marriages.csv')
library(tidyverse) # обработка данных
library(fpp3) # куча плюшек для рядов
library(rio) # импорт данных
m = import('marriages.csv')
glimpse(m)
m2 = mutate(m, date = yearmonth(date))
glimpse(m2)
marriages = as_tsibble(m2, index = date,
key = c('code', 'name'))
marriages
m_rf = filter(marriages, code == 643)
gg_tsdisplay(m_rf, total, plot_type = 'season')
gg_tsdisplay(macro, infl)
gg_tsdisplay(macro, unemp)
gg_tsdisplay(macro, c(NA, diff(pop))
gg_tsdisplay(macro, c(NA, diff(pop)))
gg_tsdisplay(macro, c(NA, diff(pop)))
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(window = 5)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(window = 4)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(window = 5)))
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(unemp ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(pop ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(diff(pop) ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(c(NA, diff(pop)) ~ trend(window = 100) +
season(window = 7)))
stl_model = model(macro,
decomp = STL(c(0, diff(pop)) ~ trend(window = 100) +
season(window = 7)))
stl_model = model(macro,
decomp = STL(c(0, diff(pop)) ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
c(0, diff(pop))
c(0, diff(macro$pop))
stl_model = model(macro,
decomp = STL(c(1, diff(pop)) ~ trend(window = 100) +
season(window = 7)))
gg_tsdisplay(macro, c(NA, diff(pop)), type="partial")
gg_tsdisplay(macro, c(NA, diff(pop)), plot_type="partial")
gg_tsdisplay(macro, c(NA, diff(pop)), plot_type="scatter")
gg_tsdisplay(macro, c(NA, diff(pop)), plot_type="scatter")
gg_tsdisplay(macro, c(NA, diff(pop)), plot_type="spectrum")
gg_tsdisplay(macro, pop), plot_type="spectrum")
gg_tsdisplay(macro, pop, plot_type="spectrum")
gg_tsdisplay(macro, pop, plot_type="scatter")
stl_model
components(stl_model) %>% autoplot()
stl_model$decomp
features(macro, feat_stl)
feat_stl(macro)
feat_stl(macro, 4)
feat_stl(macro$infl, 4)
feat_stl(macro$pop, 4)
feat_stl(macro$infl, 4)
options(scipen=999)
feat_stl(macro$infl, 4)
feat_stl(macro$pop, 4)
macro = import("macrodata.csv")
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
# trends
autoplot(macro, infl)
gg_season(macro, infl)
tail(macro)
train %>%
filter_index("1959 Q1" ~ "2007 Q4") %>%
select(Bricks)
train = macro %>%
filter_index("1959 Q1" ~ "2007 Q4") %>%
select(Bricks)
train = macro %>%
filter_index("1959 Q1" ~ "2007 Q4")
train$infl %>% model(MEAN(train$infl))
model(MEAN(train$infl))
train$infl %>% model(MEAN())
MEAN(train$infl)
a = MEAN(train$infl)
View(a)
View(a)
bricks <- aus_production %>%
filter_index("1970 Q1" ~ "2004 Q4") %>%
select(Bricks)
macro = import("macrodata.csv")
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
train_infl = macro %>%
filter_index("1959 Q1" ~ "2007 Q4") %>% select(infl)
train_infl %>% model(MEAN(infl))
a = train_infl %>% model(MEAN(infl))
forecast(a, 10)
forecast(a, h=10)
autoplot(mean_forecast)
mean_forecast = train_infl %>% model(MEAN(infl))
autoplot(mean_forecast)
plot(forecast(mean_forecast, 5))
plot(forecast(mean_forecast, h=5))
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=7)
autoplot(mean_forecast)
ggplot() + geom_line(data=macro, mapping=aes(date, infl))
ggplot() + geom_line(data=macro, mapping=aes(date, infl)) + geom_line(mean_forecast, mapping=aes(date, mean))
ggplot() + geom_line(data=macro, mapping=aes(date, infl)) + geom_line(mean_forecast, mapping=aes(date, mean_forecast$mean))
+ geom_line(mean_forecast, mapping=aes(date, mean_forecast$mean))
ggplot() + geom_line(data=macro, mapping=aes(date, infl))
ggplot() + geom_line(data=macro, mapping=aes(date, infl)) + geom_line(mean_forecast, mapping=aes(date, .mean))
ggplot() + geom_line(data=tail(macro, 20), mapping=aes(date, infl)) + geom_line(mean_forecast, mapping=aes(date, .mean))
+ geom_line(mean_forecast, mapping=aes(date, .mean))
ggplot() +
geom_line(data=tail(macro, 20), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean))
mean_forecast
autoplot(mean_forecast)
ggplot() +
geom_line(data=tail(macro, 20), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean))
ggplot() +
geom_line(data=tail(macro, 20), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean, colour="blue"))
ggplot() +
geom_line(data=tail(macro, 20), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean, color="blue"))
ggplot() +
geom_line(data=tail(macro, 20), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
ggplot() +
geom_line(data=tail(macro, 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
train_infl = macro %>%
filter_index("1959 Q1" ~ "1990 Q4") %>% select(infl)
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=(length(macro)-length(train_infl)))
ggplot() +
geom_line(data=tail(macro, 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
length(macro)-length(train_infl)
mean_forecast = forecast(mean_model, h=(nrow(macro)-nrow(train_infl)))
ggplot() +
geom_line(data=tail(macro, ), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=h)
ggplot() +
geom_line(data=tail(macro, ), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
h = (nrow(macro)-nrow(train_infl))
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
train_infl = macro %>%
filter_index("1959 Q1" ~ "2000 Q4") %>% select(infl)
h = (nrow(macro)-nrow(train_infl))
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
train_infl = macro %>%
filter_index("1959 Q1" ~ "1995 Q4") %>% select(infl)
h = (nrow(macro)-nrow(train_infl))
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue")
autoplot(mean_forecast)
naive_model = train_infl %>% model(NAIVE(infl))
naive_forecast = forecast(mean_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
# geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
naive_forecast = forecast(naive_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
# geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
rw_model = train_infl %>% model(RW(infl))
rw_forecast = forecast(rw_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green")
rw_model = train_infl %>% model(RW(infl))
rw_forecast = forecast(rw_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green")
snaive_model = train_infl %>% model(SNAIVE(infl))
snaive_forecast = forecast(snaive_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="yellow")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="orange")
library(fpp3) # куча плюшек для рядов
library(tidyverse) # обработка данных
options(scipen=999)
macro = import("macrodata.csv")
x = 1
library(fpp3) # куча плюшек для рядов
options(scipen=999)
macro = import("macrodata.csv")
library(tidyverse) # обработка данных
macro = import("macrodata.csv")
setwd("C:/Users/zehov/Desktop/current_projects/hse_tsa_1/webinar_1/data")
macro = import("C:/Users/zehov/Desktop/current_projects/hse_tsa_1/webinar_1/data/macrodata.csv")
library(tidyverse) # обработка данных
options(scipen=999)
macro = import("C:/Users/zehov/Desktop/current_projects/hse_tsa_1/webinar_1/data/macrodata.csv")
macro = import("macrodata.csv")
library(rio)
macro = import("macrodata.csv")
nrow(macro)
ncol(macro)
length(macro)
head(macro, 10)
tail(macro, 10)
colnames(macro)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
macro = tsibble(macro, index=1:nrow(macro)+1)
macro$new_index = 1:nrow(macro)+1
macro$new_index = 0:nrow(macro)
macro = tsibble(macro, index=new_index)
# trends
autoplot(macro, infl)
gg_season(macro, infl)
gg_season(macro, infl)
library(fpp3) # куча плюшек для рядов
library(tidyverse) # обработка данных
library(rio)
options(scipen=999)
macro = import("macrodata.csv")
nrow(macro)
ncol(macro)
length(macro)
head(macro, 10)
tail(macro, 10)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
# trends
autoplot(macro, infl)
gg_season(macro, infl)
gg_subseries(macro, infl)
gg_tsdisplay(macro, infl)
gg_tsdisplay(macro, infl, partial)
gg_tsdisplay(macro, infl, plot_type="partial")
gg_tsdisplay(macro, infl, plot_type="season")
gg_tsdisplay(macro, infl, plot_type="histogram")
gg_tsdisplay(macro, infl, plot_type="scatter")
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(period=4, window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 10) +
season(period=4, window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 10) +
season(period=4, window = 25)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 100) +
season(period=4, window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(infl ~ trend(window = 15) +
season(period=4, window = 25)))
components(stl_model)
components(stl_model) %>% autoplot()
feat_stl(macro$infl, 4)
train_infl = macro %>%
filter_index("1959 Q1" ~ "1995 Q4") %>% select(infl)
filter_index
train_infl
h = (nrow(macro)-nrow(train_infl))
mean_model = train_infl %>% model(MEAN(infl))
mean_forecast = forecast(mean_model, h=h)
autoplot(mean_forecast)
rw_model = train_infl %>% model(RW(infl))
rw_forecast = forecast(rw_model, h=h)
snaive_model = train_infl %>% model(SNAIVE(infl))
snaive_forecast = forecast(snaive_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="orange")
naive_model = train_infl %>% model(NAIVE(infl))
naive_forecast = forecast(naive_model, h=h)
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="orange")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red")
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="orange")
ggplot() +
geom_line(data=tail(macro, h + 50), mapping=aes(date, infl)) +
geom_line(mean_forecast, mapping=aes(date, .mean), color="blue") +
geom_line(naive_forecast, mapping=aes(date, .mean), color="red") +
geom_line(rw_forecast, mapping=aes(date, .mean), color="green") +
geom_line(snaive_forecast, mapping=aes(date, .mean), color="orange")
# cycles
autoplot(macro, unemp)
gg_season(macro, unemp)
gg_season(macro, c(NA, diff(unemp)))
gg_season(macro, unemp)
gg_subseries(macro, unemp)
gg_tsdisplay(macro, unemp)
stl_model = model(macro,
decomp = STL(unemp ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(unemp ~ trend(window = 50) +
season(window = 35)))
components(stl_model)
components(stl_model) %>% autoplot()
feat_stl(macro$unemp, 4)
# seasonality
autoplot(macro, pop)
gg_season(macro, pop)
gg_subseries(macro, pop)
gg_subseries(macro, pop)
feat_stl(macro$pop, 4)
stl_model = model(macro,
decomp = STL(pop ~ trend(window = 100) +
season(window = 7)))
components(stl_model)
components(stl_model) %>% autoplot()
stl_model = model(macro,
decomp = STL(pop ~ trend(window = 100) +
season(window = 25)))
components(stl_model)
components(stl_model) %>% autoplot()
macro$pop
diff(macro$pop)
autoplot(macro,diff(pop))
autoplot(macro, c(NA, diff(pop)))
gg_season(macro, c(NA, diff(pop)))
gg_subseries(macro, c(NA, diff(pop)))
spain = read_csv("spain.csv")
head(spain)
spain = tsibble(spain, index=time)
autoplot(spain, target)
nrow(spain)
gg_season(spain, target)
gg_season(spain, target, 91)
gg_season(spain, target, 92)
gg_season(spain, target, 93)
gg_season(spain, target, 31)
gg_season(spain, target, 30)
gg_season(spain, target, 7)
ggAcf(spain$target)
ggacf(spain$target)
gg_tsdisplay(spain, target, plot_type="partial")
gg_tsdisplay(spain, target, plot_type="partial", lag_max=400)
