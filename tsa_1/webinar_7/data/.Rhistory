library(tidyverse)
library(lubridate)
library(forecast)
setwd("C:/Users/zehov/Desktop/current_projects/hse_tsa_course/tsa_1/webinar_7/data")
spain = read_csv("spain.csv")
View(spain)
View(spain)
autoplot(spain, target)
spain_ts = as_tsibble(spain, index=time)
library(fpp3) # куча плюшек для рядов
library(rio) # импорт данных
spain_ts = as_tsibble(spain, index=time)
autoplot(spain, target)
autoplot(spain_ts, target)
gg_tsdisplay(spain_ts, target)
spain$target = scale(spain$target)
spain$temp = scale(spain$temp)
for (lg in 1:7) {
spain[sprintf("target_L%s", as.character(lg))] = dplyr::lag(spain$target, lg)
}
View(spain)
View(spain)
spain = spain %>% mutate(
day = wday(spain$time),
month = month(spain$time),
is_weekend = if_else(wday(spain$time) > 5, 1, 0)
)
View(spain)
View(spain)
spain = drop_na(spain)
## 75% of the sample size
smp_size <- floor(0.75 * nrow(spain))
train <- spain[1:smp_size, ]
test <- spain[(smp_size+1):nrow(spain), ]
model = lm("target ~ .", train)
summary(model)
preds = data.frame(time = test$time, target = predict(model, test))
pred = predict(model, test)
ggplot(mapping = aes(time, target)) +
geom_line(data = tail(train, 100)) +
geom_line(data = test, col="blue") +
geom_line(data = preds, col="red")
mse(preds$target, test$target)
library(tidyverse)
library(lubridate)
library(forecast)
library(fpp3) # куча плюшек для рядов
library(rio) # импорт данных
mse(preds$target, test$target)
# simple exmple of two strategies
h = 30
small_train = train %>% select(c(time, target, target_L1))
small_test = head(test, h) %>% select(c(time, target, target_L1))
View(small_train)
View(small_train)
# estimating one-step model
model = lm("target ~ target_L1", small_train)
summary(model)
View(small_test)
View(small_test)
for (step in 1:h) {
# at each step predicting next value
cur_pred = predict(model, small_test[step,])
small_test$target[step] = cur_pred
# setting forecast as regressor for target_L1
if (step+1 <= h){
small_test$target_L1[step+1] = cur_pred
}
}
recursive_preds = small_test %>% select(time, target)
View(recursive_preds)
View(recursive_preds)
small_train = train %>% select(c(target, target_L1))
small_test = head(test, h) %>% select(c(time,target, target_L1))
View(small_train)
View(small_train)
for (step in 1:h){
if (step > 1) {
small_train = small_train %>% mutate(target = lag(target, 1))
}
small_train = drop_na(small_train)
cur_model = lm("target ~ .", small_train)
cur_pred = predict(cur_model, small_test[1, ])
small_test$target[step] = cur_pred
}
direct_preds = small_test
ggplot(mapping = aes(time, target)) +
geom_line(data = tail(train, 10)) +
geom_line(data = head(test, h), col="blue") +
geom_line(data = recursive_preds,col="red") +
geom_line(data = direct_preds, col="green")
small_train = train
small_test = head(test, h)
for (step in 1:h){
if (step > 1) {
small_train = small_train %>% mutate(target = lag(target, 1))
}
small_train = drop_na(small_train)
cur_model = lm("target ~ .", small_train)
cur_pred = predict(cur_model, small_test[1, ])
small_test$target[step] = cur_pred
}
direct_preds = small_test
ggplot(mapping = aes(time, target)) +
geom_line(data = tail(train, 10)) +
geom_line(data = head(test, h), col="blue") +
geom_line(data = recursive_preds,col="red") +
geom_line(data = direct_preds, col="green")
