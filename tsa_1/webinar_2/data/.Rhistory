macro = import("macrodata.csv")
nrow(macro)
ncol(macro)
length(macro)
library(tidyverse) # обработка данных
library(fpp3) # куча плюшек для рядов
library(rio) # импорт данных
setwd("C:/Users/zehov/Desktop/current_projects/hse_tsa_course/tsa_1/webinar_2/data")
macro = import("macrodata.csv")
nrow(macro)
ncol(macro)
length(macro)
head(macro, 10)
tail(macro, 10)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
glimpse(macro)
cur_series = macro$cpi
macro = import("macrodata.csv")
View(macro)
View(macro)
cur_series = macro$cpi
train = filter(cur_series, date < yearquarter('2000-03-31'))
macro = import("macrodata.csv")
nrow(macro)
ncol(macro)
length(macro)
head(macro, 10)
tail(macro, 10)
colnames(macro)[1] = "date"
macro$date=yearquarter(macro$date)
macro = tsibble(macro, index=date)
glimpse(macro)
cur_series = macro$cpi
train = filter(cur_series, date < yearquarter('2000-03-31'))
train = filter(macro, date < yearquarter('2000-03-31'))
test =  filter(macro, date >= ymd('2000-03-31'))
train = filter(macro, date < yearquarter('2000-03-31'))
test =  filter(macro, date >= yearquarter('2000-03-31'))
model_table = model(train,
snaive = SNAIVE(realdgp),
ets_aaa = ETS(realdgp ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(realdgp ~ error('A') + trend('N') + season('A')))
model_table = model(train,
snaive = SNAIVE(cpi),
ets_aaa = ETS(cpi ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(cpi ~ error('A') + trend('N') + season('A')))
model_table
report(select(model_table, ets_aaa))
fcst = forecast(model_table, h = '2 years')
fcst
macro_vis = filter(macro, date >= yearquarter('2000-03-31'))
fcst_sub = filter(fcst, .model %in% c('snaive', 'ets_aaa'))
autoplot(fcst_sub, macro_vis)
fcst = forecast(model_table, h = nrow(test))
fcst
macro_vis = filter(macro, date >= yearquarter('2000-03-31'))
fcst_sub = filter(fcst, .model %in% c('snaive', 'ets_aaa'))
autoplot(fcst_sub, macro_vis)
model_table = model(train,
snaive = SNAIVE(cpi),
ets_aaa = ETS(cpi ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(cpi ~ error('A') + trend('N') + season('A')),
ets_aaa_ln = ETS(log(cpi) ~ error('A') + trend('A') + season('A')),
ets_ana_ln = ETS(log(cpi) ~ error('A') + trend('N') + season('A'))
)
model_table
fcst = forecast(model_table, h = nrow(test))
fcst
model_table2 = mutate(model_table,
top2 = (snaive + ets_aaa_ln) / 2,
top3 = (snaive + ets_aaa_ln + ets_aaa) / 3)
fcst = forecast(model_table2, h = '2 years')
fcst
fcst = forecast(model_table2, h = nrow(test))
fcst
accuracy(fcst, marr_rf)
fcst = forecast(model_table, h = nrow(test))
fcst
accuracy(fcst, test)
model_table2 = mutate(model_table,
top2 = (snaive + ets_aaa_ln) / 2,
top3 = (snaive + ets_aaa_ln + ets_aaa) / 3)
fcst = forecast(model_table2, h = nrow(test))
fcst
accuracy(fcst, test)
macro_stretch = stretch_tsibble(macro,
.init = 170, .step = 1)
macro_stretch
model_table = model(marr_stretch,
snaive = SNAIVE(total),
ets_aaa = ETS(total ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(total ~ error('A') + trend('N') + season('A')),
ets_aaa_ln = ETS(log(total) ~ error('A') + trend('A') + season('A')),
ets_ana_ln = ETS(log(total) ~ error('A') + trend('N') + season('A'))
)
model_table = model(macro_stretch,
snaive = SNAIVE(total),
ets_aaa = ETS(total ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(total ~ error('A') + trend('N') + season('A')),
ets_aaa_ln = ETS(log(total) ~ error('A') + trend('A') + season('A')),
ets_ana_ln = ETS(log(total) ~ error('A') + trend('N') + season('A'))
)
model_table = model(macro_stretch,
snaive = SNAIVE(cpi),
ets_aaa = ETS(cpi ~ error('A') + trend('A') + season('A')),
ets_ana = ETS(cpi ~ error('A') + trend('N') + season('A')),
ets_aaa_ln = ETS(log(cpi) ~ error('A') + trend('A') + season('A')),
ets_ana_ln = ETS(log(cpi) ~ error('A') + trend('N') + season('A'))
)
model_table
fcst = forecast(model_table, h = 1)
accuracy(fcst, marr_rf)
fcst = forecast(model_table, h = 1)
accuracy(fcst, macro)
model_table2 = mutate(model_table,
top2 = (ets_aaa_ln + ets_ana_ln) / 2)
fcst = forecast(model_table2, h = 1)
accuracy(fcst, macro)
